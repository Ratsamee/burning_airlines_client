{"ast":null,"code":"var _jsxFileName = \"/Users/MobbleBookPro/projects/burning_airlines/burning_airlines_client/src/Components/Airplane.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst Airplane_SERVER_URL = 'https://group-project-airline.herokuapp.com/airplanes.json';\n\nclass Airplane extends Component {\n  constructor() {\n    super();\n    this.state = {\n      airplane: []\n    };\n    this.saveAirplane = this.saveAirplane.bind(this); // DOUBLE CHECK\n\n    const fetchPlanes = () => {\n      axios.get(Airplane_SERVER_URL).then(results => {\n        this.setState({\n          airplane: results.data\n        });\n        setTimeout(fetchPlanes, 2000);\n      });\n    };\n\n    fetchPlanes();\n  }\n\n  saveAirplane(name, rows, columns) {\n    axios.post(Airplane_SERVER_URL, {\n      name: name,\n      rows: rows,\n      columns: columns\n    }).then(result => {\n      // DOUBLECHECK\n      this.setState({\n        airplane: result.data\n      }); // DOUBLECHECK\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Add Plane\"), React.createElement(AirplaneCreate, {\n      onSubmit: this.saveAirplane,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass AirplaneCreate extends Component {\n  // we're doing all the interactions with the application in this class, this is a child.\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      rows: 0,\n      columns: 0\n    }; // we want the state of the name to be a string\n\n    this._handleSubmit = this._handleSubmit.bind(this); // DOUBLE CHECK\n\n    this._handleChange = this._handleChange.bind(this); // DOUBLE CHECK\n  }\n\n  _handleSubmit(event) {\n    //This is the action of us sending the data\n    event.preventDefault(); //we're stopping the page from refreshing\n\n    this.props.onSubmit(this.state.name, this.state.columns, this.state.rows); // onsubmit, submit the name\n\n    this.setState({\n      name: '',\n      rows: 0,\n      colums: 0\n    }); // make sure its a string and intergers\n  }\n\n  _handleChange(event) {\n    // This is the action of us storing the data\n    switch (event.target.name) {\n      case \"planeName\":\n        this.setState({\n          name: event.target.value\n        });\n        break;\n\n      case \"rows\":\n        this.setState({\n          rows: event.target.value\n        });\n        break;\n\n      case \"cols\":\n        this.setState({\n          columns: event.target.value\n        });\n        break;\n    } // this is the code we're using to retain this data\n\n  }\n\n  render() {\n    // for us to view anything we must render\n    return (// a must to see anything within render\n      React.createElement(\"form\", {\n        onSubmit: this._handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Name: \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"planeName\",\n        onChange: this._handleChange // onChanged activate _handleChange\n        ,\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), \"Seat Rows: \", React.createElement(\"input\", {\n        type: \"number\",\n        name: \"rows\",\n        onChange: this._handleChange // onChanged activate _handleChange\n        ,\n        value: this.state.rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), \"Seat Columns: \", React.createElement(\"input\", {\n        type: \"number\",\n        name: \"cols\",\n        onChange: this._handleChange // onChanged activate _handleChange\n        ,\n        value: this.state.columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\n;\nexport default Airplane;","map":{"version":3,"sources":["/Users/MobbleBookPro/projects/burning_airlines/burning_airlines_client/src/Components/Airplane.js"],"names":["React","Component","axios","Airplane_SERVER_URL","Airplane","constructor","state","airplane","saveAirplane","bind","fetchPlanes","get","then","results","setState","data","setTimeout","name","rows","columns","post","result","render","AirplaneCreate","_handleSubmit","_handleChange","event","preventDefault","props","onSubmit","colums","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Airplane_SERVER_URL = 'https://group-project-airline.herokuapp.com/airplanes.json'\n\nclass Airplane extends Component {\n  constructor() {\n    super();\n    this.state = {\n      airplane: []\n    };\n      this.saveAirplane = this.saveAirplane.bind(this) // DOUBLE CHECK\n\n      const fetchPlanes = () => {\n        axios.get(Airplane_SERVER_URL).then((results) => {\n          this.setState({airplane: results.data});\n          setTimeout( fetchPlanes, 2000 );\n        })}\n        fetchPlanes();\n  };\n\n\n  saveAirplane(name, rows, columns) {\n    axios.post(Airplane_SERVER_URL, { name: name, rows: rows, columns: columns}).then((result) => { // DOUBLECHECK\n      this.setState({airplane: result.data});// DOUBLECHECK\n    });\n  }\n\n  render() {\n    return (\n      <div>\n      <h2>Add Plane</h2>\n      <AirplaneCreate onSubmit={this.saveAirplane} />\n      </div>\n    )\n  }\n}\n\nclass AirplaneCreate extends Component { // we're doing all the interactions with the application in this class, this is a child.\n  constructor(){\n    super();\n    this.state = {name: '',\n                  rows: 0,\n                  columns: 0}; // we want the state of the name to be a string\n\n\n    this._handleSubmit = this._handleSubmit.bind(this); // DOUBLE CHECK\n    this._handleChange = this._handleChange.bind(this); // DOUBLE CHECK\n  }\n\n  _handleSubmit(event) { //This is the action of us sending the data\n    event.preventDefault(); //we're stopping the page from refreshing\n    this.props.onSubmit(this.state.name , this.state.columns, this.state.rows); // onsubmit, submit the name\n    this.setState({name: '', rows: 0, colums: 0}); // make sure its a string and intergers\n  }\n\n  _handleChange(event) { // This is the action of us storing the data\n    switch (event.target.name) {\n      case \"planeName\":\n      this.setState({ name: event.target.value});\n      break;\n      case \"rows\":\n      this.setState({rows: event.target.value});\n      break;\n      case \"cols\":\n      this.setState({columns: event.target.value});\n      break;\n\n    }\n\n\n     // this is the code we're using to retain this data\n  }\n\n  render() { // for us to view anything we must render\n    return( // a must to see anything within render\n      <form onSubmit={ this._handleSubmit }>\n\n        Name: <input type=\"text\" name=\"planeName\" onChange={ this._handleChange }  // onChanged activate _handleChange\n        value={ this.state.name }></input>\n\n        Seat Rows: <input type=\"number\" name=\"rows\" onChange={ this._handleChange }  // onChanged activate _handleChange\n        value={ this.state.rows }></input>\n\n\n        Seat Columns: <input type=\"number\" name=\"cols\" onChange={ this._handleChange }  // onChanged activate _handleChange\n        value={ this.state.columns }></input>\n        <input type=\"submit\" value=\"Submit\" />\n\n      </form>\n    );\n  }\n};\n\n\n\nexport default Airplane;\n"]},"metadata":{},"sourceType":"module"}