{"ast":null,"code":"var _jsxFileName = \"/Users/bigpoo/Projects/projects/burning_airlines/burning_airlines_client/src/Components/Airplane.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst Airplane_SERVER_URL = 'http://localhost:3000/Airplanes.json';\n\nclass Airplane extends Component {\n  constructor() {\n    super();\n    this.state = {\n      airplanes: []\n    };\n    this.saveAirplane = this.saveAirplane.bind(this); // DOUBLE CHECK\n\n    const fetchAirplanes = () => {\n      axios.get(Airplane_SERVER_URL).then(results => {\n        console.log(results.data);\n        this.setState({\n          Airplanes: results.data\n        });\n        setTimeout(fetchAirplanes, 850); // The Recursion\n      });\n    };\n\n    fetchAirplanes();\n  }\n\n  saveAirplane(name, rows, columns) {\n    axios.post(Airplane_SERVER_URL, {\n      name: name,\n      rows: rows,\n      columns: columns\n    }).then(result => {\n      // DOUBLECHECK\n      console.log('aftersave', result);\n      this.setState({\n        airplanes: [...this.state.airplane, result.data]\n      }); // DOUBLECHECK\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Hello World\"), React.createElement(AirplaneCreate, {\n      onSubmit: this.saveAirplane,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass AirplaneCreate extends Component {\n  // we're doing all the interactions with the application in this class, this is a child.\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      rows: 0,\n      columns: 0\n    }; // we want the state of the name to be a string\n\n    this._handleSubmit = this._handleSubmit.bind(this); // DOUBLE CHECK\n\n    this._handleChange = this._handleChange.bind(this); // DOUBLE CHECK\n  }\n\n  _handleSubmit(event) {\n    //This is the action of us sending the data\n    event.preventDefault(); //we're stopping the page from refreshing\n\n    this.props.onSubmit(this.state.name, this.state.columns, this.state.rows); // onsubmit, submit the name\n\n    this.setState({\n      name: '',\n      rows: 0,\n      colums: 0\n    }); // make sure its a string\n  }\n\n  _handleChange(event) {\n    // This is the action of us storing the data\n    switch (event.target.name) {\n      case \"planeName\":\n        this.setState({\n          name: event.target.value\n        });\n        break;\n\n      case \"rows\":\n        this.setState({\n          rows: event.target.value\n        });\n        break;\n\n      case \"cols\":\n        this.setState({\n          columns: event.target.value\n        });\n        break;\n    } // this is the code we're using to retain this data\n\n  }\n\n  render() {\n    // for us to view anything we must render\n    return (// a must to see anything within render\n      React.createElement(\"form\", {\n        onSubmit: this._handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Name: \", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"planeName\",\n        onChange: this._handleChange // onChanged activate _handleChange\n        ,\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), \"Row: \", React.createElement(\"input\", {\n        type: \"number\",\n        name: \"rows\",\n        onChange: this._handleChange // onChanged activate _handleChange\n        ,\n        value: this.state.rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), \"Column: \", React.createElement(\"input\", {\n        type: \"number\",\n        name: \"cols\",\n        onChange: this._handleChange // onChanged activate _handleChange\n        ,\n        value: this.state.columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Tell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nexport default Airplane;","map":{"version":3,"sources":["/Users/bigpoo/Projects/projects/burning_airlines/burning_airlines_client/src/Components/Airplane.js"],"names":["React","Component","axios","Airplane_SERVER_URL","Airplane","constructor","state","airplanes","saveAirplane","bind","fetchAirplanes","get","then","results","console","log","data","setState","Airplanes","setTimeout","name","rows","columns","post","result","airplane","render","AirplaneCreate","_handleSubmit","_handleChange","event","preventDefault","props","onSubmit","colums","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Airplane_SERVER_URL = 'http://localhost:3000/Airplanes.json'\n\nclass Airplane extends Component {\n  constructor() {\n    super();\n    this.state = {\n      airplanes: []\n    };\n      this.saveAirplane = this.saveAirplane.bind(this) // DOUBLE CHECK\n\n      const fetchAirplanes = () => {\n        axios.get(Airplane_SERVER_URL).then((results)=>{\n        console.log(results.data);\n        this.setState({Airplanes: results.data});\n        setTimeout( fetchAirplanes, 850 ) // The Recursion\n      });\n    }\n\nfetchAirplanes();\n  };\n\n  saveAirplane(name, rows, columns) {\n    axios.post(Airplane_SERVER_URL, { name: name, rows: rows, columns: columns}).then((result) => { // DOUBLECHECK\n      console.log('aftersave', result);\n      this.setState({airplanes: [...this.state.airplane, result.data]});// DOUBLECHECK\n    });\n  }\n\n  render() {\n    return (\n      <div>\n      <h1>Hello World</h1>\n      <AirplaneCreate onSubmit={this.saveAirplane} />\n      </div>\n    )\n  }\n}\n\nclass AirplaneCreate extends Component { // we're doing all the interactions with the application in this class, this is a child.\n  constructor(){\n    super();\n    this.state = {name: '',\n                  rows: 0,\n                  columns: 0}; // we want the state of the name to be a string\n\n\n    this._handleSubmit = this._handleSubmit.bind(this); // DOUBLE CHECK\n    this._handleChange = this._handleChange.bind(this); // DOUBLE CHECK\n  }\n\n  _handleSubmit(event) { //This is the action of us sending the data\n    event.preventDefault(); //we're stopping the page from refreshing\n    this.props.onSubmit(this.state.name , this.state.columns, this.state.rows); // onsubmit, submit the name\n    this.setState({name: '', rows: 0, colums: 0}); // make sure its a string\n  }\n\n  _handleChange(event) { // This is the action of us storing the data\n    switch (event.target.name) {\n      case \"planeName\":\n        this.setState({ name: event.target.value});\n        break;\n      case \"rows\":\n      this.setState({rows: event.target.value});\n      break;\n      case \"cols\":\n      this.setState({columns: event.target.value});\n      break;\n\n    }\n\n\n     // this is the code we're using to retain this data\n  }\n\n  render() { // for us to view anything we must render\n    return( // a must to see anything within render\n      <form onSubmit={ this._handleSubmit }>\n\n        Name: <input type=\"text\" name=\"planeName\" onChange={ this._handleChange }  // onChanged activate _handleChange\n        value={ this.state.name }></input>\n\n        Row: <input type=\"number\" name=\"rows\" onChange={ this._handleChange }  // onChanged activate _handleChange\n        value={ this.state.rows }></input>\n\n\n        Column: <input type=\"number\" name=\"cols\" onChange={ this._handleChange }  // onChanged activate _handleChange\n        value={ this.state.columns }></input>\n        <input type=\"submit\" value=\"Tell\" />\n\n      </form>\n    );\n  }\n}\n\n\n\nexport default Airplane;\n"]},"metadata":{},"sourceType":"module"}